{"version":3,"sources":["components/Card.js","components/CardContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","id","userId","title","body","CardContainer","useState","data","setdata","useEffect","a","fetch","json","then","response","fetchData","map","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAkBeA,MAff,SAAcC,GACZ,OACE,qBAAKC,UAAU,WAAWC,GAAG,WAA7B,SACE,sBAAKD,UAAU,eAAf,UACE,oBAAGA,UAAU,cAAb,uBAAsCD,EAAMG,UAE5C,oBAAIF,UAAU,aAAd,SACE,8CAAiBD,EAAMI,WAEzB,oBAAGH,UAAU,YAAb,oBAAiCD,EAAMK,c,MCsBhCC,MA9Bf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACyBC,MACrB,8CAFJ,cAIWC,OAAOC,MAAK,SAACC,GAAD,OAAcN,EAAQM,MAJ7C,4CADc,uBAAC,WAAD,wBAQdC,KACC,IAGD,qBAAKd,GAAG,YAAR,SACGM,EAAKS,KAAI,SAACC,GACT,OACE,cAAC,EAAD,CACEf,OAAQe,EAAQf,OAChBC,MAAOc,EAAQd,MACfC,KAAMa,EAAQb,MACTa,EAAQhB,UCbViB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be69e453.chunk.js","sourcesContent":["import \"./Card.css\";\r\nimport React from \"react\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card-box\" id=\"card-box\">\r\n      <div className=\"card-content\">\r\n        <p className=\"card-userId\">USER-ID : {props.userId}</p>\r\n\r\n        <h5 className=\"card-title\">\r\n          <strong>Title : {props.title}</strong>\r\n        </h5>\r\n        <p className=\"card-desc\">Body : {props.body}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./CardContainer.css\";\r\n\r\nfunction CardContainer() {\r\n  const [data, setdata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts\"\r\n      );\r\n      response.json().then((response) => setdata(response));\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      {data.map((element) => {\r\n        return (\r\n          <Card\r\n            userId={element.userId}\r\n            title={element.title}\r\n            body={element.body}\r\n            key={element.id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardContainer;\r\n","import \"./App.css\";\nimport CardContainer from \"./components/CardContainer\";\n\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div>\n      <CardContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}